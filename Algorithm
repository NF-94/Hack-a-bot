void setup() {
  // put your setup code here, to run once:

}


//ALL MATRICES AND STRINGS ETCS

int IR_threshold= 988;
int ceiling_matrix[5][6] = { //First one is the ceilings from normal view, 2nd is the left wall ceilings
  {1,1,1,1,1},
  {0,0,0,0,0},
  {0,0,0,0,0},
  {0,0,0,0,0},
  {0,0,0,0,0},
  {1,1,1,1,1}
}
int wall_matrix[6][5] = {
  {1,0,0,0,0,1},
  {1,0,0,0,0,1},
  {1,0,0,0,0,1},
  {1,0,0,0,0,1},
  {1,0,0,0,0,1}
}
int occupied[7][7] = {
  {1,1,1,1,1,1,1}
  {1,0,0,0,0,2,1},
  {1,0,0,0,0,0,1},
  {1,0,0,0,0,0,1},
  {1,0,0,0,0,0,1},
  {1,2,0,0,0,0,1},
  {1,1,1,1,1,1,1}
}
String orientation[6] = {
  {"","","Up","Down","Left","Right"}
};

int garry_index[2] = {1,6}
};
int neil_index[2] = {6,1}
};
int walls[3] = {0,0,0}

//FUNCTIONS

void sensing(sensor_data){
  if sensor_data[0] < IR_threshold:{
  walls[0] = 1}
  if sensor_data[3] < IR_threshold:{
  walls[1] = 1}
  if sensor_data[2] < IR_threshold:{
  walls[2] = 1}
  Serial.print("walls:",walls)
  return walls
};
void gary_orientation(walls,occupied,ceiling_matrix,wall_matrix){
  if orientation(gary_index[0],gary_index[1]) == 2:{
    if walls[0] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[1] == 1:{
      ceiling_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[2] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
  }
  if orientation(gary_index[0],gary_index[1]) == 3:{
    if walls[0] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[1] == 1:{
      ceiling_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[2] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
  }
  if orientation(gary_index[0],gary_index[1]) == 4:{
    if walls[0] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[1] == 1:{
      ceiling_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[2] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
  }
  if orientation(gary_index[0],gary_index[1]) == 5:{
    if walls[0] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[1] == 1:{
      ceiling_matrix[gary_index[0],gary_index[1]] = 1
    }
    if walls[2] == 1:{
      wall_matrix[gary_index[0],gary_index[1]] = 1
  }

}




void algorithm(){

  }
  
}
void loop() {
  // put your main code here, to run repeatedly:

}

